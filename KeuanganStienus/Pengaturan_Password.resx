<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btNext.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>